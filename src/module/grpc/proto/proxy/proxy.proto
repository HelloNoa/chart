syntax = "proto3";
package proxy;
//option go_package = "./proxy";

import "proxy/proxy.bitcoin.message.proto";
import "proxy/proxy.ethereum.failly.message.proto";

service Proxy {
	rpc GetBlockCount(GetBlockCountRequest) returns (GetBlockCountResponse);
	rpc GetBlock(GetBlockRequest) returns (GetBlockResponse);
	rpc GetRawTransaction(GetRawTransactionRequest) returns (GetRawTransactionResponse);
	rpc CreateRawTransaction(CreateRawTransactionRequest) returns (CreateRawTransactionResponse);
	rpc ListUnspent(ListUnspentRequest) returns (ListUnspentResponse);
	rpc SignRawTransaction (SignRawTransactionRequest) returns (SignRawTransactionResponse);
	rpc SendRawTransaction(SendRawTransactionRequest) returns (SendRawTransactionResponse);
	rpc SendToAddress(SendToAddressRequest) returns (SendToAddressResponse);
	rpc CreateWalletAddress(CreateWalletRequest) returns (CreateWalletResponse);
	rpc GetNewAddress(GetNewAddressRequest) returns (GetNewAddressResponse);
	rpc GetPrivateKey(GetPrivateKeyRequest) returns (GetPrivateKeyResponse);
	rpc GetAddressUTXO(GetAddressUTXORequest) returns (GetAddressUTXOResponse);

	rpc GetReceipt(GetReceiptInput) returns (GetReceiptOutput);
	rpc SendTransaction(SendTransactionInput) returns (SendTransactionOutput);
	rpc Transfer(TransferInput) returns (TransferOutput);
	rpc GetBlockNumber(GetBlockNumberInput) returns (GetBlockNumberOutput);
	rpc GetBlocks(GetBlocksInput) returns (GetBlocksOutput);
	rpc CreateWallet(CreateWalletInput) returns (CreateWalletOutput);
	rpc GetBalance(GetBalanceInput) returns (GetBalanceOutput);
}
